// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: news_categories.sql

package db

import (
	"context"
)

const addNewsCategory = `-- name: AddNewsCategory :exec
INSERT INTO NewsCategories (NewsId, CategoryId) VALUES ($1, $2)
`

type AddNewsCategoryParams struct {
	Newsid     int32
	Categoryid int32
}

func (q *Queries) AddNewsCategory(ctx context.Context, arg AddNewsCategoryParams) error {
	_, err := q.db.Exec(ctx, addNewsCategory, arg.Newsid, arg.Categoryid)
	return err
}

const getCategoriesByNewsId = `-- name: GetCategoriesByNewsId :many
SELECT CategoryId FROM NewsCategories WHERE NewsId = $1
`

func (q *Queries) GetCategoriesByNewsId(ctx context.Context, newsid int32) ([]int32, error) {
	rows, err := q.db.Query(ctx, getCategoriesByNewsId, newsid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int32
	for rows.Next() {
		var categoryid int32
		if err := rows.Scan(&categoryid); err != nil {
			return nil, err
		}
		items = append(items, categoryid)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
